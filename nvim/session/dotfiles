let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/dotfiles
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
argglobal
%argdel
tabnew
tabnew
tabrewind
edit nvim/init.vim
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 93 + 93) / 187)
exe 'vert 2resize ' . ((&columns * 93 + 93) / 187)
argglobal
balt nvim/init.vim
setlocal fdm=expr
setlocal fde=GetPotionFold(v:lnum)
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal nofen
let s:l = 252 - ((8 * winheight(0) + 21) / 42)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 252
normal! 0
wincmd w
argglobal
if bufexists("nvim/init.vim") | buffer nvim/init.vim | else | edit nvim/init.vim | endif
if &buftype ==# 'terminal'
  silent file nvim/init.vim
endif
balt nvim/init.vim
setlocal fdm=expr
setlocal fde=GetPotionFold(v:lnum)
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal nofen
let s:l = 254 - ((0 * winheight(0) + 21) / 42)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 254
normal! 0
wincmd w
exe 'vert 1resize ' . ((&columns * 93 + 93) / 187)
exe 'vert 2resize ' . ((&columns * 93 + 93) / 187)
tabnext
edit nvim/languages/typescript.vim
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd _ | wincmd |
split
1wincmd k
wincmd w
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 21 + 23) / 47)
exe 'vert 1resize ' . ((&columns * 93 + 93) / 187)
exe '2resize ' . ((&lines * 20 + 23) / 47)
exe 'vert 2resize ' . ((&columns * 93 + 93) / 187)
exe '3resize ' . ((&lines * 21 + 23) / 47)
exe 'vert 3resize ' . ((&columns * 93 + 93) / 187)
exe '4resize ' . ((&lines * 20 + 23) / 47)
exe 'vert 4resize ' . ((&columns * 93 + 93) / 187)
argglobal
balt nvim/lualsp.vim
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
8,9fold
5,10fold
23,24fold
20,25fold
29,36fold
28,37fold
let &fdl = &fdl
let s:l = 14 - ((12 * winheight(0) + 10) / 21)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 14
normal! 020|
wincmd w
argglobal
if bufexists("~/dotfiles/nvim/languages/csharp.vim") | buffer ~/dotfiles/nvim/languages/csharp.vim | else | edit ~/dotfiles/nvim/languages/csharp.vim | endif
if &buftype ==# 'terminal'
  silent file ~/dotfiles/nvim/languages/csharp.vim
endif
balt nvim/lualsp.vim
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
11,17fold
25,28fold
22,29fold
37,39fold
33,43fold
45,55fold
32,56fold
63,76fold
let &fdl = &fdl
let s:l = 9 - ((8 * winheight(0) + 10) / 20)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 9
normal! 049|
wincmd w
argglobal
if bufexists("~/dotfiles/nvim/plugins/foldufo.vim") | buffer ~/dotfiles/nvim/plugins/foldufo.vim | else | edit ~/dotfiles/nvim/plugins/foldufo.vim | endif
if &buftype ==# 'terminal'
  silent file ~/dotfiles/nvim/plugins/foldufo.vim
endif
balt ~/dotfiles/nvim/languages/bash.vim
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
27,29fold
51,52fold
59,60fold
53,62fold
48,64fold
42,67fold
12,67fold
70,71fold
68,74fold
75,77fold
80,82fold
let &fdl = &fdl
let s:l = 35 - ((9 * winheight(0) + 10) / 21)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 35
normal! 020|
wincmd w
argglobal
if bufexists("~/dotfiles/nvim/languages/bash.vim") | buffer ~/dotfiles/nvim/languages/bash.vim | else | edit ~/dotfiles/nvim/languages/bash.vim | endif
if &buftype ==# 'terminal'
  silent file ~/dotfiles/nvim/languages/bash.vim
endif
balt nvim/init.vim
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
12,13fold
9,14fold
18,20fold
25,28fold
31,33fold
let &fdl = &fdl
let s:l = 10 - ((6 * winheight(0) + 10) / 20)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 10
normal! 0
wincmd w
2wincmd w
exe '1resize ' . ((&lines * 21 + 23) / 47)
exe 'vert 1resize ' . ((&columns * 93 + 93) / 187)
exe '2resize ' . ((&lines * 20 + 23) / 47)
exe 'vert 2resize ' . ((&columns * 93 + 93) / 187)
exe '3resize ' . ((&lines * 21 + 23) / 47)
exe 'vert 3resize ' . ((&columns * 93 + 93) / 187)
exe '4resize ' . ((&lines * 20 + 23) / 47)
exe 'vert 4resize ' . ((&columns * 93 + 93) / 187)
tabnext
edit \[coc-explorer]-1
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
2wincmd h
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 46 + 93) / 187)
exe '2resize ' . ((&lines * 21 + 23) / 47)
exe 'vert 2resize ' . ((&columns * 93 + 93) / 187)
exe '3resize ' . ((&lines * 20 + 23) / 47)
exe 'vert 3resize ' . ((&columns * 46 + 93) / 187)
exe '4resize ' . ((&lines * 20 + 23) / 47)
exe 'vert 4resize ' . ((&columns * 46 + 93) / 187)
exe 'vert 5resize ' . ((&columns * 46 + 93) / 187)
argglobal
balt nvim/languages/typescript.vim
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal nofen
silent! normal! zE
let &fdl = &fdl
let s:l = 1 - ((0 * winheight(0) + 21) / 42)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 0
wincmd w
argglobal
if bufexists("~/dotfiles/bin/gwt/main.sh") | buffer ~/dotfiles/bin/gwt/main.sh | else | edit ~/dotfiles/bin/gwt/main.sh | endif
if &buftype ==# 'terminal'
  silent file ~/dotfiles/bin/gwt/main.sh
endif
balt nvim/languages/typescript.vim
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal nofen
silent! normal! zE
let &fdl = &fdl
let s:l = 49 - ((0 * winheight(0) + 10) / 21)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 49
normal! 010|
wincmd w
argglobal
if bufexists("~/dotfiles/bin/gwt/repo/clone") | buffer ~/dotfiles/bin/gwt/repo/clone | else | edit ~/dotfiles/bin/gwt/repo/clone | endif
if &buftype ==# 'terminal'
  silent file ~/dotfiles/bin/gwt/repo/clone
endif
balt ~/dotfiles/bin/gwt/main.sh
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal nofen
silent! normal! zE
let &fdl = &fdl
let s:l = 1 - ((0 * winheight(0) + 10) / 20)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 0
wincmd w
argglobal
if bufexists("~/dotfiles/bin/gwt/repo/create") | buffer ~/dotfiles/bin/gwt/repo/create | else | edit ~/dotfiles/bin/gwt/repo/create | endif
if &buftype ==# 'terminal'
  silent file ~/dotfiles/bin/gwt/repo/create
endif
balt ~/dotfiles/bin/gwt/repo/clone
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal nofen
silent! normal! zE
let &fdl = &fdl
let s:l = 3 - ((2 * winheight(0) + 10) / 20)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 3
normal! 010|
wincmd w
argglobal
if bufexists("~/dotfiles/bin/gwt/README.md") | buffer ~/dotfiles/bin/gwt/README.md | else | edit ~/dotfiles/bin/gwt/README.md | endif
if &buftype ==# 'terminal'
  silent file ~/dotfiles/bin/gwt/README.md
endif
balt nvim/init.vim
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal nofen
silent! normal! zE
let &fdl = &fdl
let s:l = 46 - ((0 * winheight(0) + 21) / 42)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 46
normal! 0
wincmd w
exe 'vert 1resize ' . ((&columns * 46 + 93) / 187)
exe '2resize ' . ((&lines * 21 + 23) / 47)
exe 'vert 2resize ' . ((&columns * 93 + 93) / 187)
exe '3resize ' . ((&lines * 20 + 23) / 47)
exe 'vert 3resize ' . ((&columns * 46 + 93) / 187)
exe '4resize ' . ((&lines * 20 + 23) / 47)
exe 'vert 4resize ' . ((&columns * 46 + 93) / 187)
exe 'vert 5resize ' . ((&columns * 46 + 93) / 187)
tabnext 2
badd +177 nvim/init.vim
badd +7 nvim/languages/typescript.vim
badd +66 ~/dotfiles/bin/gwt/main.sh
badd +85 nvim/lualsp.vim
badd +1 ~/dotfiles/nvim/languages/csharp.vim
badd +34 ~/dotfiles/nvim/plugins/foldufo.vim
badd +13 ~/dotfiles/nvim/languages/bash.vim
badd +0 \[coc-explorer]-1
badd +1 ~/dotfiles/bin/gwt/repo/clone
badd +1 ~/dotfiles/bin/gwt/repo/create
badd +1 ~/dotfiles/bin/gwt/README.md
badd +102 ~/dotfiles/bin/fxs.sh
badd +5 ~/dotfiles/nvim/plugins/scrollbar.vim
badd +43 nvim/plugins/fzf.vim
badd +1 ~/dotfiles/nvim/plugins/mdpreview.vim
badd +1 nvim/plugins/telescope.vim
badd +1 nvim/plugins/gruvbox.vim
badd +1 firefox/home/chrome/userChrome.css
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToOFsIc
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
