let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/dotfiles
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
argglobal
%argdel
edit dtlf.sh
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
2wincmd h
wincmd w
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 80 + 118) / 236)
exe 'vert 2resize ' . ((&columns * 77 + 118) / 236)
exe 'vert 3resize ' . ((&columns * 77 + 118) / 236)
argglobal
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=
setlocal fdl=4
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 43 - ((15 * winheight(0) + 13) / 26)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 43
normal! 024|
wincmd w
argglobal
if bufexists("bin/gwt/gwt") | buffer bin/gwt/gwt | else | edit bin/gwt/gwt | endif
if &buftype ==# 'terminal'
  silent file bin/gwt/gwt
endif
balt nvim/plugins/lualine.vim
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
102
normal! zo
104
normal! zo
104
normal! zo
107
normal! zo
113
normal! zo
126
normal! zo
114
normal! zo
114
normal! zo
120
normal! zo
133
normal! zo
154
normal! zo
158
normal! zo
221
normal! zo
222
normal! zo
225
normal! zo
228
normal! zo
231
normal! zo
234
normal! zo
let s:l = 106 - ((55 * winheight(0) + 13) / 26)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 106
normal! 0
wincmd w
argglobal
if bufexists("bin/gwt/gwt") | buffer bin/gwt/gwt | else | edit bin/gwt/gwt | endif
if &buftype ==# 'terminal'
  silent file bin/gwt/gwt
endif
balt nvim/plugins/lualine.vim
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=
setlocal fdl=4
setlocal fml=1
setlocal fdn=20
setlocal fen
102
normal! zo
107
normal! zo
114
normal! zo
120
normal! zo
221
normal! zo
let s:l = 108 - ((9 * winheight(0) + 13) / 26)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 108
normal! 033|
wincmd w
3wincmd w
exe 'vert 1resize ' . ((&columns * 80 + 118) / 236)
exe 'vert 2resize ' . ((&columns * 77 + 118) / 236)
exe 'vert 3resize ' . ((&columns * 77 + 118) / 236)
tabnext 1
badd +1 nvim/init.vim
badd +20 nvim/plugins/lualine.vim
badd +106 nvim/lualsp.vim
badd +72 tmux.conf
badd +175 ~/.config/nvim/lightline.vim
badd +27 nvim/plugins/nvimdap.vim
badd +4 nvim/plugins/gruvbox.vim
badd +8 nvim/plugins/vimspector.vim
badd +174 README.md
badd +9621 ~/Applications/neovim/squashfs-root/usr/share/nvim/runtime/doc/eval.txt
badd +122 dtlf.sh
badd +1572 ~/Applications/neovim/squashfs-root/usr/share/nvim/runtime/doc/api.txt
badd +24 bin/ff
badd +184 ~/.vim/plugged/vim-tmux-runner/doc/vim-tmux-runner.txt
badd +13 bin/nvim-sessionizer
badd +21 bin/gwt/README.md
badd +168 zsh/zshrc
badd +1 bin/tat
badd +108 bin/gwt/gwt
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToOFsIc
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
