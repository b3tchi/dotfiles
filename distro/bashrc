#
# ~/.bashrc
#

#function for tmux to kill session and log
kill_local_unattached() {
	# tmux list-sessions -F "#{session_name}" 2>/dev/null | grep "^local_" | while read session; do
	tmux list-windows -F "#{session_name} #{window_index} #{window_active_clients}" 2>/dev/null |
		grep "^local_" |
		while read session window_index active_clients; do
			if [[ -n "$window_index" ]] && [[ $active_clients -eq 0 ]]; then
				echo "Killing unattached window: $session:$window_index" >>"$HOME/.tmux.log"
				tmux kill-window -t "$session:$window_index" 2>/dev/null
			fi
		done
}
export -f kill_local_unattached

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

PATH=$PATH:~/.local/bin

alias ls='ls --color=auto'
alias grep='grep --color=auto'
PS1='[\u@\h \W]\$ '

# Function to handle tmux session
start_local_session() {
	if command -v tmux >/dev/null 2>&1 && [[ -z "$TMUX" ]]; then
		# Check if 'local' session exists

		view_nr=$(tmux ls | grep -o 'local_[0-9]*:' | grep -o '[0-9]*' | sort -n | tail -1)

		print $view_nr
		if [[ -z $view_nr ]]; then
			tmux new-session -d -t local -s local_0
			new_view_nr=0
			window_index=0
		else
			new_view_nr=$((($view_nr + 1)))
			tmux new-session -d -t local -s "local_$new_view_nr"
			window_index=$(tmux new-window -d -P -F "#{window_index}" -t "local_$new_view_nr")
		fi

		tmux attach-session -t "local_$new_view_nr:$window_index" \; set destroy-unattached
	fi
}

start_local_session
