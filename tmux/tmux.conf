# Improve colors
# set -g default-terminal 'screen-256color'

# for anable italics tnux
# set -g default-terminal "tmux"
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color:RGB"

# Enable RGB colour if running in xterm(1)
set-option -sa terminal-overrides ",xterm*:Tc"
set -g renumber-windows on

#setting terminal windows titles dynamically based on window
set -g set-titles on
set -g set-titles-string "#S[#W]"

#undercurls WIP
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# Set scrollback buffer to 10000
set -g history-limit 10000

set -g base-index 1
setw -g pane-base-index 1

#mouse support on
set -g mouse on
# set -g mode-mouse on
# set -g mouse-resize-pane on
# set -g mouse-select-pane on
# set -g mouse-select-window on

#automatic recovery
set -g @continuum-restore 'on'
set -g @continuum-save-interval '10'

#keybinds
unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix

#for some reason have to relaad twice to udate variable THEME keep as workaround
bind-key r run-shell 'tools mpxr reload-config'; display-message "~/.tmux.conf reloaded"

#integration with tmux
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# env_cal=$(cat ~/.profile | grep -oP 'THEME=\K[a-z]*')
# source-file ~/.shell_config/theme/current
# bind-key R display-message "$THEME"

#solving compatibility with Tmux 3.0+
# if-shell '[ $(echo "$(tmux -V | cut -d" " -f2 | tr -d "[:alpha:]") < 3.0" | bc) -eq 1  ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell '[ $(echo "$(tmux -V | cut -d" " -f2 | tr -d "[:alpha:]") >= 3.0" | bc) -eq 1  ]' \
    "bind-key -n 'C-\\\\' if-shell \"$is_vim\" 'send-keys C-\\\\' 'select-pane -l'"

# Use vim keybindings in copy mode
setw -g mode-keys vi

#bind side and bellow
bind-key b split-window -v  -c '#{pane_current_path}'
bind-key s split-window -h  -c '#{pane_current_path}'

#---Switchers---
#list all windows
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

#PrimeGeans sessoniser
# bind-key -r f run-shell "tmux neww ~/.local/bin/nvim-sessionizer"
#My Startifier based on nvim windows
# bind-key -r f run-shell "tmux neww ~/.local/bin/nvim-startifier"
# bind-key -r f split-window -v "nvim-startifier"
bind-key -r f split-window -v "source ~/.profile && tools mpxr session create-from-branch"

# Setup 'v' to begin selection as in Vim
#Toughtbot APi
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Tmux 3+ api
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'pbcopy'

# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

#Tmux 3+ api
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'pbcopy'
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'pbcopy'

#my-wiki
bind-key w split-window -h "tools ff"
bind-key W run-shell "tools nvim-startifier wiki"

# set active-inactive window styles

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

#restons sessions
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'


# install plugin manger
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

### theme settings ###
# window separators
setw -g window-status-separator ""

# monitor window changes
setw -g monitor-activity on
setw -g monitor-bell on

# set statusbar update interval
set-option -g status-interval 1

### status line tmux ###
# set -g status-justify "centre"
set -g status-justify "left"
set -g status "on"
set -g status-left-style "none"
set -g status-right-style "none"
set -g status-right-length "100"
set -g status-left-length "100"
setw -g window-status-separator ""

### colorscheme ###
if-shell 'tools mpxr change-theme' {
    display-message 'chaged theme'

    set -g status-left "#[fg=$status_l1_fg,bg=$status_l1_bg] #{session_name} "
    set -g status-right "#[fg=$status_r1_fg,bg=$status_r1_bg] #{host} #{continuum_status} "

    setw -g window-status-format "#[fg=$status_window_fg] #{window_index} #{window_name} "
    setw -g window-status-current-format "#[fg=$status_window_c_fg,bg=$status_window_c_bg] #{window_index} #{window_name} #{window_flags} "
}

